name: Release
on:
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    if: github.repository_owner == 'oven-sh'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install bun
        uses: xhyrom/setup-bun@v0.1.6
        with:
          bun-version: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: npm

      - name: Install dependencies
        run: bun install

      - name: ESLint
        run: bun run lint

      - name: Generate package
        run: bun run generate:package

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: bun-types
          path: dist/*
          if-no-files-found: error

    publish-npm:
      name: Publish on NPM
      runs-on: ubuntu-latest
      if: github.repository_owner == 'oven-sh'

      steps:
        - name: Install node
          uses: actions/setup-node@v3
          with:
            node-version: latest
            cache: npm

        - name: Download all artifacts
          uses: actions/download-artifact@v3
          with:
            path: dist

        - name: Publish on NPM
          run: npm publish --access public
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    publish-gpr:
      name: Publish on GPR
      runs-on: ubuntu-latest
      if: github.repository_owner == 'oven-sh'

      steps:
        - name: Install node
          uses: actions/setup-node@v3
          with:
            node-version: latest
            registry-url: 'https://npm.pkg.github.com/'
            scope: '@oven-sh'
            cache: npm

        - name: Install bun
          uses: xhyrom/setup-bun@v0.1.6
          with:
            bun-version: latest
            github-token: ${{ secrets.GITHUB_TOKEN }}

        - name: Download all artifacts
          uses: actions/download-artifact@v3
          with:
            path: dist

        - name: Add scope to name
          run: bun scripts/gpr.ts

        - name: Publish on GPR
          run: npm publish --access public
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    create-release:
      name: Create Release
      runs-on: ubuntu-latest
      if: github.repository_owner == 'oven-sh'

      steps:
        - name: Download all artifacts
          uses: actions/download-artifact@v3
          with:
            path: dist

        - name: Set version
          run: echo "version=$(jq --raw-output '.version' dist/package.json)" >> $GITHUB_ENV

        - name: Create Release
          uses: softprops/action-gh-release@v0.1.14
          with:
            tag_name: "bun-types v${{ env.version }}"
            body: "This is the release of bun-tyoes that corresponds to the commit [${{ github.sha }}]"
            token: ${{ secrets.GITHUB_TOKEN }}
            files: |
              dist/*